/*
 * AGRID.CSS - simple, light and fluid grid system
 *
 * Copyright (c) 2013 Yann Gouffon, Antistatique.net SÃ rl
 * Inspirate by 1140-Grid & Twitter Bootstrap
 *
 * Licensed under MIT license
 *
 */



// CONTROL PANEL
//================================================================================

  // Define the number of columns
  $columnNumber :          12;

  // You want Gutter ? (yes=1/no=0)
  $gutterExist :           1;

  // Define the smallest .span
  $startFrom :             1;

  // Define the ratio between column and gutter
  $columnRatio :            1.61803399;

  // Define the max-width of your Grid
  $maxWidth :               1140px;

  // Define the Media Queries steps
  $limit :                  767px;
  $ieLimit :                950px;

//================================================================================


//--------------------------------------------------------------------------------
// CALCULATOR  !! DON'T TOUCH !!
//--------------------------------------------------------------------------------

$columns :               ($columnNumber + 1);
$gutterNumber :          ($columnNumber - 1) * $gutterExist;

// ie optimisation (works perfeclty after 950px width)
$ieCoef :                 0.5px;
$ieOptimisation :         ($ieCoef / $maxWidth*100%);

// Calculates widths
$colWidth :              (100*$columnRatio)/(($columnNumber*$columnRatio)+$gutterNumber);
$gutterWidth :            ($colWidth/$columnRatio) * $gutterExist;



//--------------------------------------------------------------------------------
// INIT
//--------------------------------------------------------------------------------

.container {max-width: $maxWidth; margin: 0 auto; padding: 0 10px;}
.row {width: 100%;overflow: hidden; clear:both; margin: ($gutterWidth*1%) 0; position: relative;}
[class*="col"] {margin:0;margin-right: $gutterWidth*1%; *margin-right: ($gutterWidth*1%)-$ieOptimisation;float: left;}
[class*="col"] .row {margin:0;}
.row .last {margin-right: 0;}
[class*="col"] img {max-width: 100%; height: auto; width: auto; box-sizing: border-box; vertical-align: middle;}


//--------------------------------------------------------------------------------
// MIXINS
//--------------------------------------------------------------------------------

@mixin col-x($columnNumber, $colWidth, $gutterWidth) {
  @for $i from $startFrom through $columnNumber {
    .col-#{$i} {
      width: (($colWidth * $i) + ($gutterWidth * ($i - 1))) * 1%;
      *width: (($colWidth * $i) + ($gutterWidth * ($i - 1))) * 1% - $ieOptimisation;
    }
  }
}

@mixin offset-x($columnNumber, $colWidth, $gutterWidth) {
  @for $i from $startFrom through $columnNumber - 1 {
    .offset#{$i} {
      margin-left: (($colWidth * $i) + ($gutterWidth * $i)) * 1%; 
      *margin-left: (($colWidth * $i) + ($gutterWidth * $i)) * 1% - $ieOptimisation;
    }
  }
}

@include col-x($columnNumber, $colWidth, $gutterWidth);
@include offset-x($columnNumber, $colWidth, $gutterWidth);


//---------------------------------------------------------------------------------
// MEDIA QUERIES
//---------------------------------------------------------------------------------

@media handheld, only screen and (max-width: $limit) {
  .row {width: 100%; min-width: 0; margin-left: 0px; margin-right: 0px; padding-left: 0px; padding-right: 0px;}
  .row [class*="span"] {width: auto; float: none; margin: ($gutterWidth*1%) 0;}
  .row [class*="offset"] {margin-left: 0;}
}

@media screen and (max-width: $ieLimit) {
  .lt-ie9 .row {width: 100%; min-width: 0; margin-left: 0px; margin-right: 0px; padding-left: 0px; padding-right: 0px;}
  .lt-ie9 .row [class*="span"] {width: auto; float: none; margin: ($gutterWidth*1%) 0;}
  .lt-ie9 .row [class*="offset"] {margin-left: 0;}
}
